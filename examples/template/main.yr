import core.io;

struct
| a : int
| b : string
| c : bool
 -> A;

def innerFoo (T) (const tu : t!T) {
    print (tu.0);
}

def innerFoo if (is (T : tuple)) (T) (const tu : T) {
    let (a, b ...) = tu;
    print (a);
    print (", ");
    innerFoo (b);
}

def foo if (is (T : tuple)) (T) (const a : T) {
    print ("(");
    innerFoo (a);
    print (")");
}
                 
def foo if (is (T : struct)) (T) (const a : T) {
    print (a::typeid);    
    println (a.tupleof);    
}

def main () {
    A {1, "salut", false}.foo ();
}
