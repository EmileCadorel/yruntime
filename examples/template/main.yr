
struct
| a : i32
| b : string
| c : bool
 -> A;

def innerFoo (T ...) (const tu : T) {
    cte if (is (tu : tuple)) {
        cte if (tu::arity >= 2) {
            let (a, b ...) = tu;
            print (a);
            print (", ");
            innerFoo (b::expand);
        } else {
            print (tu.0);
        }
    } else {
        print (tu);
    }
}

def foo if (is (T : tuple)) (T) (const a : T) {
    print ("{");
    innerFoo (a::expand);
    println ("}");
}
                 
def foo if (is (T : struct)) (T) (const a : T) {
    print (a::typeid);    
    foo (a.tupleof);
}

def main () {
    A {1, "salut", false}.foo ();
}
