
def fromStringZ (const a : p!char) -> string {    
    if (a is null) return "";
    else if (*a == 0UB) return "";
    let anc = a, len = 0UL, b = a;
    while (*b != 0UB) {
        len ++;
        b = b + 1;
    }

    let ret = [char ; len];
    for (it in 0U .. len) {
        ret [it] = *(anc + it);
    }
    return  string {len, ret.ptr};
}

def opEquals (const a : string, const b : string) -> bool {
    if (a.len != b.len) return false;
    for (it in 0U .. a.len) {
        if (a [it] != b [it]) return false;
    }
    return true;
}
