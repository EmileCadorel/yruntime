mod std::any;
import std::io
    
pub {
    /**
     * Ancestor class of all type
     * An any type is relativaly similar to type Option, but doesn't have a default type
     */
    class @abstract Any {
        self () {}
        
        impl Printable;        
    }


    /**
     * This class is used to have a data in an any value
     */
    class Some (T) over Any {
        pub let mut value : T;

        self (x : T) with value = x {}

        over print (self) {
            print (self.value);
        }
    }

    /**
     * Any can have type none, when no value is used
     */
    class None over Any {
        self () {}

        over print (self) {
            print ("None");
        }
    }    

}
