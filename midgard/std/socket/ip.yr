mod std::socket::ip;

import std::string, std::conv;
import std::c::socket;

extern (C) def htons (host : u16) -> u16;
extern (C) def inet_addr (c : &char) -> u32;
extern (C) def inet_aton (c : &char, i : &u32);

pub enum
| V4 = 0
| V6 = 1
 -> IpVersion;

pub struct
| info : IpVersion
| addr : IpAddrC
| port : u16
 -> IpAddr;

pub struct
| v4 : IpV4Addr = IpV4Addr (0u32)
| v6 : IpV6Addr = IpV6Addr ([0u16; 8])
 -> IpAddrC;

pub struct
| s_addr : u32
 -> IpV4Addr;

pub struct
| segments : [u16 ; 8]
 -> IpV6Addr;
    
pub def toIpAddr (str : [c32], port : u16) -> IpAddr {        
    IpAddr (IpVersion::V4, IpAddrC (v4->IpV4Addr (inet_addr (str.ptr))), port)
}    
