mod std::algorithm::comparison;

import std::traits;

pub {
    def if (isNumeric!T) min (T) (a : T, b : T) -> T {
        if a < b a else b
    }
    
    def if (isIntegral!T) max (T) (a : T, b : T) -> T {
        if a < b b else a
    }

    /**
     * Restrict the value of x between the interval [low; up]
     */
    def if (isIntegral!T) clamp (T) (x : T, low : T, up : T) -> T {
        if x < low
            low
        else if x > up
            up
        else x
    }    
}

