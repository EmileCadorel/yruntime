import std.traits;
//import std.algorithm.searching;

def min if (isIntegral!T) (T) (const a : T, const b : T) -> T {
    if a < b return a;
    return b;
}

def max  if (isIntegral!T) (T) (const a : T, const b : T) -> T {
    if a < b return b;
    else return a;
}

def clamp (T) (const val : T, const lower : T, const upper : T) -> T 
    return max (lower, min (upper, val));

