mod std.string;

def indexOf (const str : string, str2 : string) -> i64 {
    let index = -1;
    let iStr = 0, iStr2 = 0;
    
    while (iStr < str.len && iStr2 < str2.len) {
        if (str[iStr] == str2[iStr2])
        {
            iStr2++;
            if (index < 0)
                index = iStr;
        }
        else if (index >= 0 && str[iStr] != str2[iStr2])
        {
            println (iStr, iStr2);
            return -1;
        }
        iStr++;
    }

    if (iStr2 == str2.len)
        return index;
    return -1;
}

def lastIndexOf (const str : string, c : char) -> u64 {
    for i in str.len .. 0U {
        if str [i - 1U] == c
            return i;
    }
    return str.len;
}

def toLower (a : [const char]) -> [char] {
    let res = [char; new a.len];
    for i in 0U .. a.len {
        if a [i] >= 'A' && a [i] <= 'Z'
            res [i] = a [i] - 'A' + 'a';
        else res [i] = a [i];
    }
    return res;
}
