mod std.string;

def lastIndexOf (const str : string, c : char) -> u64 {
    for i in str.len .. 0U {
        if str [i - 1U] == c
            return i;
    }
    return str.len;
}

def indexOf (const str : string, const what : string) -> u64 {
    if what.len > str.len { return str.len; }
    let i = 0U, j = 0U;
    let index = str.len;
    while i < str.len && j < what.len {
        if str [i] == what [j] {
            j ++;
            if index == str.len
                index = i;
        } else if index != str.len && str [i] != what [j] {
            return str.len;
        }
        i ++;
    }

    if j == what.len {
        return index;
    }
    
    return str.len;    
}

def toLower (a : [const char]) -> [char] {
    let res = [char; new a.len];
    for i in 0U .. a.len {
        if a [i] >= 'A' && a [i] <= 'Z'
            res [i] = a [i] - 'A' + 'a';
        else res [i] = a [i];
    }
    return res;
}
