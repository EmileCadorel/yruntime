mod std.random;
import std.traits;

public extern (C) rand () -> i32;
public extern (C) srand (i : i32);
public extern (C) time (i : i32) -> i32;

def uniform if (isIntegral!(T) () && isIntegral!(T2)())
    (T, T2) (a : T, b : T2) -> i32 {
	let static init = false;
	if (!init) {
	    init = true;
	    srand (time (0));
	}
	
	return rand () % cast!i32((b - a) + a);
    }
